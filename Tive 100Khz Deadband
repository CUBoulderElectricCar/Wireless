#include <stdint.h>
#include <stdbool.h>
#include <math.h>
#include <time.h>
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "inc/hw_hibernate.h"
#include "driverlib/fpu.h"
#include "driverlib/gpio.h"
#include "driverlib/hibernate.h"
#include "driverlib/interrupt.h"
#include "driverlib/pin_map.h"
#include "driverlib/rom.h"
#include "driverlib/sysctl.h"
#include "driverlib/systick.h"
#include "driverlib/uart.h"
#include "driverlib/pwm.h"
#include "utils/uartstdio.h"
#include "utils/cmdline.h"




int main(void) {

    FPUEnable();    //Enable Hardware Floating Point Unit
    FPUStackingEnable();    //Enable floating point operation ins ISRs

    //Enable System clock at 40Mhz with a phase locked loop, the crystal frequwncy at 16Mhz
    SysCtlClockSet(SYSCTL_SYSDIV_5 | SYSCTL_USE_PLL | SYSCTL_XTAL_16MHZ | SYSCTL_OSC_MAIN);

    //Set PWM clock at the same frequency as system clock
    SysCtlPWMClockSet(SYSCTL_PWMDIV_1);


    SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM0); //Enable control of PWM module 0

    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);    //Enable control of GPIO B

    GPIOPinConfigure(GPIO_PB6_M0PWM0);  //Map PB6 to PWM0 G0, OP 0
    GPIOPinConfigure(GPIO_PB7_M0PWM1);  //Map PB7 to PWM0 G0, OP 1

    GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_6);    //Configure PB6 as PWM
    GPIOPinTypePWM(GPIO_PORTB_BASE, GPIO_PIN_7);    //Configure PB7 as PWM

    PWMGenConfigure(PWM0_BASE, PWM_GEN_0, PWM_GEN_MODE_UP_DOWN |
        PWM_GEN_MODE_NO_SYNC);  //Configure PWM0 G0 as UP/DOWN counter with no sync of updates
    PWMGenPeriodSet(PWM0_BASE, PWM_GEN_0, 400);    //Set period of PWM0 G0

    PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0, 200);    //Set duty cycle of PWM0 G0

    PWMDeadBandEnable(PWM0_BASE, PWM_GEN_0, 10, 10);  //Configure deadband on PWM0 G0

    PWMOutputState(PWM0_BASE, PWM_OUT_0_BIT | PWM_OUT_1_BIT , true);    //Enable OP 0,1 on PWM0 G0

    PWMGenEnable(PWM0_BASE, PWM_GEN_0); //Enable PWM0, G0

    SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM1); //Enable control of PWM1

    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);    //Enable control of GPIO A

    GPIOPinConfigure(GPIO_PA6_M1PWM2);  //Map PWM1, P1 OP2 to PA6
    GPIOPinConfigure(GPIO_PA7_M1PWM3);  //Map PWM1, P1 OP3 to PA7

    GPIOPinTypePWM(GPIO_PORTA_BASE, GPIO_PIN_6);    //Configure PA6 as PWM
    GPIOPinTypePWM(GPIO_PORTA_BASE, GPIO_PIN_7);    //Configure PA7 as PWM

    PWMGenConfigure(PWM1_BASE, PWM_GEN_1, PWM_GEN_MODE_DOWN |
        PWM_GEN_MODE_NO_SYNC);  //Configure PWM1, G1 as Down counter with no sync of updates

    PWMGenPeriodSet(PWM1_BASE, PWM_GEN_1, 200);    //Set Period of PWM1, G1
    PWMPulseWidthSet(PWM1_BASE, PWM_OUT_2, 160);    //Set phase shift

    PWMDeadBandEnable(PWM1_BASE, PWM_GEN_1, 5, 5);  //Set deadband

    PWMOutputState(PWM1_BASE, PWM_OUT_2_BIT | PWM_OUT_3_BIT , true);    //Enable op 2, 3

    HWREG(0x40029080 + 0x00000020) = 0x440; //Set comparator A, B behaviour to toggle
    PWMGenEnable(PWM1_BASE, PWM_GEN_1); //Enable PWM1, G1

    while(1)
    {

    }

    return 0;
}
